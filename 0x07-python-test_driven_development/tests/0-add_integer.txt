The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer(10, 53)
    63

    >>> add_integer(-10, -53)
    -63

    >>> add_integer(67.5, -10.45)
    57

    >>> add_integer(14, -10.45)
    4

    >>> add_integer(35.5, -13)
    22

    >>> add_integer(4**2, 10)
    26

    >>> a = [1, 2, 3]
    >>> add_integer(a, -13)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> b = [1, 2, 3]
    >>> add_integer(57.6, b)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("hola", 423)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(-78365, "string")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> a = {1: 'hola'}
    >>> add_integer(a, -13)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> b = {1: 'hola'}
    >>> add_integer(236, b)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("", 42.28484)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(, 2)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

    >>> add_integer(,)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

    >>> add_integer(2, )
    100

    >>> add_integer(2)
    100

    >>> add_integer(-49, c)
    Traceback (most recent call last):
    ...
    NameError: name 'c' is not defined

    >>> add_integer(c, 478.123)
    Traceback (most recent call last):
    ...
    NameError: name 'c' is not defined

    >>> add_integer(False)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    #pep8 style
    >>> import os
    >>> os.popen("pep8 0-add_integer.py").read()
    ''

    #Module comments
    >>> len_comment = len(__import__("0-add_integer").__doc__)
    >>> len_comment > 4
    True

    #Function comments
    >>> len_comment = len(__import__("0-add_integer").add_integer.__doc__)
    >>> len_comment > 2
    True

    #Checking README file
    >>> import os
    >>> os.path.isfile('README.md')
    True

    #Checking executable file
    >>> import os
    >>> current_path = os.getcwd() + "/0-add_integer.py"
    >>> os.access(current_path, os.X_OK)
    True

    #Checking first line of file
    >>> with open("0-add_integer.py", "r") as file:
    ...     first_line = file.readline()
    ...
    >>> first_line == '#!/usr/bin/python3\n'
    True

    #Checking last line of file
    >>> with open("0-add_integer.py", "r") as file:
    ...     for last_line in file:
    ...             pass
    ...
    >>> last_line[len(last_line) - 1] == '\n'
    True
